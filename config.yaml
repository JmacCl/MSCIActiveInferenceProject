verbosity: False
agent:
  actions:
    - UP
    - DOWN
    - LEFT
    - RIGHT
  initial_position: random
  properties:
    observation_offset: 1 # either a number between 0 and 1, or a random, or none for 0
    transition_offset: 1 # either a number between 0 and 1, or a random, or none for 0
environment:
  grid_dimensions: [5, 5]
  complexities:
    obstacles:
      positions: random # could be defined list
      number: 4
    cues:
      positions: None # [[1,1], [1, 7], [6, 1], [6, 7]] # could be defined list or None
  stochastic:
    transitions:
      occurrences: random # either random or specify a number for how many times they occur
    observation:
      occurrences: random # either random or specify a number for how many times they occur
  terminal_states:
    Goal: [2, 2]
    Trap: [2, 4]

#      - TOP:]
#        position: [ 1, 5 ]
#        reward: 2
#      - BOTTOM:
#        position: [ 3, 5 ]
#        reward: -4
experiment_parameters:
  global:
    time_steps: [25, 50, 75]
    save_name: "simple_grid_world"
    trap: False
    gen_model:
      noisy_observation: False
      noisy_transition: False
      noisy_start: True
#    environment:
#      changing_obstacles: False
#      changing_cues: False
  RF:
    gamma: 5
  AiF:
    gamma: [8, 16, 32]
    alpha: [8, 16, 32]
    agent_class:
      stochastic_short_policy:
          sampling_mode: "marginal"
          policy_len: 2
          agent_selection: "stochastic"
      stochastic_long_policy:
          sampling_mode: "marginal"
          policy_len: 4
          agent_selection: "stochastic"
      deterministic_long_policy:
        sampling_mode: "full"
        policy_len: 4
        agent_selection: "deterministic"
#    sampling_mode: ["full", "marginal"] # either full or marginal
#    policy_len:
#      stochastic: [2, 4]
#      deterministic: [4]
#    agent_selection: ["stochastic", "deterministic"] # Either deterministic of stochastic
    # For things below, not sure if they do much
    use_states_info_gain: True
    use_utility: True
    policy_sep_prior: False # cant be true with use_BMA
    use_BMA: True # cant be true with policy_sep_prior
    use_param_info_gain: True
model_derivation:
  None




